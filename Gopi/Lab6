// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

contract factory {
    uint idDigits = 16;
    uint idModulus = 10**idDigits;

    struct Product {
        string name;
        uint id;
    }

    Product[] public products;

    event NewProduct(uint indexed ArrayProductId, string name, uint id);

    mapping(uint => address) public productToOwner;
    mapping(address => uint) public ownerProductCount;
    mapping(uint => uint) public age; // Mapping to store the age of each user by their user ID

    function createProduct(string memory _name, uint _id) private {
        uint productId = products.length;
        Product memory newProduct = Product({name: _name, id: _id});
        products.push(newProduct);
        emit NewProduct(productId, _name, _id);
        assignOwnership(productId);
    }

    function _generateRandomId(string memory _str) private view returns (uint) {
        uint rand = uint(keccak256(abi.encodePacked(_str))) % idModulus;
        return rand;
    }

    function createRandomProduct(string memory _name) public {
        uint randId = _generateRandomId(_name);
        createProduct(_name, randId);
    }

    function assignOwnership(uint _productId) public {
        require(_productId < products.length, "Product does not exist");
        productToOwner[_productId] = msg.sender;
        ownerProductCount[msg.sender]++;
    }

    function getProductsByOwner(address _owner) external view returns (uint[] memory) {
        uint[] memory result = new uint[](ownerProductCount[_owner]);
        uint counter = 0;
        for (uint i = 0; i < products.length; i++) {
            if (productToOwner[i] == _owner) {
                result[counter] = i;
                counter++;
            }
        }
        return result;
    }

    // Modifier to check if a user is older than a certain age
    modifier olderThan(uint _age, uint _userId) {
        require(age[_userId] >= _age, "User is not old enough.");
        _;
    }

    // Function to validate that a user is at least 18 years old
    function validateUsers(uint _userId) public view olderThan(18, _userId) {
        // Function body intentionally left blank
    }
}
