/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/2410cab8-0f57-4863-91d3-fcbaec82504e 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float diff1;
  float ultra_1;
  float water_1;
  bool alarm;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <NewPingESP8266.h>
#define TRIGGER_PIN D1
#define ECHO_PIN D2
#define LED_PIN D4 

#define MAX_DISTANCE 100

NewPingESP8266 sonar(TRIGGER_PIN, ECHO_PIN,MAX_DISTANCE);


const int analogPin = A0; // Define the analog pin you want to read from
const float MAX_DEPTH_MM = 80.0; // Maximum depth the sensor can measure in mm

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  pinMode(LED_PIN, OUTPUT);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  // Set debug message level
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

  float cm = sonar.ping_cm(); 
  ultra_1 = cm;
  ArduinoCloud.update();
  
  int value = analogRead(analogPin);
  float voltage = (float)value * 5.0 / 1023.0; // Convert digital units to voltage (0-5)
  water_1 = 0.1*voltage * MAX_DEPTH_MM / 5.0; // Convert voltage to water level in mm (0-40)
  ArduinoCloud.update();

  float trim = water_1 - ultra_1;
  diff1 = trim;
  ArduinoCloud.update();

  if (abs(trim) < 2) {
    alarm1 = true;
    digitalWrite(LED_PIN, HIGH);
    ArduinoCloud.update();
  } else {
    alarm1 = false;
    digitalWrite(LED_PIN, LOW);
    ArduinoCloud.update();
  }
  ArduinoCloud.update();
  
  delay(500); // Wait for 0.5 second before the next reading
}


/*
  Since Altura is READ_WRITE variable, onAlturaChange() is
  executed every time a new value is received from IoT Cloud.
*/
/*
  Since Ultra1 is READ_WRITE variable, onUltra1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onUltra1Change()  {
  // Add your code here to act upon Ultra1 change
}

/*
  Since Water1 is READ_WRITE variable, onWater1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onWater1Change()  {
  // Add your code here to act upon Water1 change
}

/*
  Since Diff1 is READ_WRITE variable, onDiff1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onDiff1Change()  {
  // Add your code here to act upon Diff1 change
}

/*
  Since Alarm is READ_WRITE variable, onAlarmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAlarm1Change()  {
  // Add your code here to act upon Alarm change
}
